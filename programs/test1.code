let y :: int = 2
let yy :: 1 = y == 1 ? y : 1
echo yy
let x :: 1 -> int = i :: int -> {
  let ii :: int = 1
  ii
}
let xx :: int = x(1)
echo xx

let f :: (int -> int) -> int = f :: (int -> int) -> f(1)
echo f(x :: int -> x + 10)

let compose :: (int -> int) -> (int -> int) -> (int -> int) = f :: (int -> int) -> g :: (int -> int) -> x :: int -> g(f(x))
let add1 :: int -> int = x :: int -> x + 1
let times2 :: int -> int = x :: int -> x * 2
let c :: int -> int = compose(times2)(add1)
echo c(1)