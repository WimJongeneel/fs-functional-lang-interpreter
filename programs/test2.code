let x = 1

type data <a> = { value: a }

let d :: data<<string>> = { value: "hi" }

let df = <a>(d :: data<<a>>) -> d.value

echo df<string>(d)

let f = <a>(x :: int) -> x

let compose = <a, b, c>(f :: a -> b) -> (g :: b -> c) -> (a :: a) -> g(f(a))

let add1 = (i :: int) -> i + 1
let times2 = (i :: int) -> i * 2
echo compose<int, int, int>(add1)(times2)(1)