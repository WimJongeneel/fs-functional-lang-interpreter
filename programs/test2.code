let x = 1

type data <a> = { value: a }

let x :: data<<int>> = { value: 1 }

let f = <a, b>x :: int -> x

type x <a, b, c> = (a -> b) -> (b -> c) -> a -> c

let c = <a, b, c> a :: (a -> b) -> g :: (b -> c) -> a :: a -> g<b, c>(f<a, b>(a))